### Project WEB CS🌍(Akash, Soma, Sabuj)

Chat Application

Features:  
  - Connection request with message
  - individual message system
  - Status system
  - Real time notification
  - Group messaging system

Technology use:
  - ReactJS  --------------------> Frontend Library
  - Node with Express.JS  -------> Backend and API creation
  - MongoDB  --------------------> DB connection
  - Socket.io  ------------------> Realtime communication
  - Cloudinary  -----------------> Storage 
  - Nodemailer  -----------------> Mail service
  - Zod -------------------------> Validation 
  - Redux  ----------------------> State Management
  - Tailwind CSS ----------------> CSS library
  - Lucide React  ---------------> Icon packs
  - Lottie files  ---------------> Animated files
  - BcryptJS --------------------> Password Hashing



------------------------------------ Model creation ----------------------------------------

1. user(complete)

2.message( soma ) :
  -sender
  -reciver
  -message 

3. status ( akash ) :
  - user
  - type 
  - media :{
     url : ,
     public_id : ,
  }
  - likes : [
    {
       user
    }
  ]
  -message
 
 - expiary :{
   date : Date ,
   defult : Date.now() * 24 * 1000 
 }
 

 4. groups ( sabuj ): 

     - name 
     - description 
     - mambers : [
      {
        user
      }
     ] 
     - image :{

     }

   --- complete



  --------- api creation --------------------


  ........... status section ...............

  base url : - "/api/v1/status"

  1. status create 
     - user 
     - type 
     - message : string , optional 
     - media : string , optional 
  
  2. status delete 
     - user 
     - statusId 

  3.all status show 
    
    show status of all friends if any status exist 


  4. like on status 

    - user 
    - statusId 

    push userId in like array of status table 




    .............. message .................

    base url "/api/v1/message" 

    1. create message :
       - sender 
       - reciver
       - message : string , optional 
       - type 
       - media : optional , string
  
    2. edit message :
       // only sender can edit the message 
       - sender 
       - messageId ,
       - message 

    3. delete message :
       // only sender can delete the message 
       - messageId 
       - sender 

    4. like message :
       - user 
       - messageID 
    
    5. update like to message:
        - user
        - messageID 

